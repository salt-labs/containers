---
project: cbr-multi-cloud
kind: PIPELINE
name: demo
icon: "organization,left, "
enabled: true
description: Testing codestream pipelines
concurrency: 10
options: [GIT_TRIGGER]
input:
  BUILDER_IMAGE_PATH: ghcr.io/salt-labs/containers/codestream-ci:latest
  GIT_BRANCH: containers/dockerfile
  GIT_REPO: https://github.com/salt-labs/demo.git
  GIT_SRC: src
  GIT_SSH_KEY: ""
  GIT_TOKEN: ""
  GIT_USER: ""
  IMAGE_NAME: clean
  IMAGE_TAG: latest
  LOG_LEVEL: DEBUG
  OCI_REGISTRY: ghcr.io/salt-labs/demo
  OCI_REGISTRY_CACHE: ghcr.io/salt-labs/kaniko-cache
  OCI_REGISTRY_USERNAME: MAHDTech
_inputMeta:
  IMAGE_TAG:
    mandatory: true
    description: Optional name for the OCI image tag
  OCI_REGISTRY:
    mandatory: true
    description: The image registry URL including the organisation or project
  IMAGE_NAME:
    mandatory: true
    description: The name of the OCI image
  OCI_REGISTRY_CACHE:
    mandatory: true
    description: OCI cache for kaniko
  BUILDER_IMAGE_PATH:
    mandatory: true
    description: The full URL to the builder image
  GIT_USER:
    mandatory: false
    description: Optional username for git HTTP authentication
  GIT_REPO:
    mandatory: true
    description: The URL to the git source code repository
  GIT_SRC:
    mandatory: true
    description: The folder where the source code is cloned locally
  OCI_REGISTRY_USERNAME:
    mandatory: true
    description: Username to access the OCI registry
  GIT_TOKEN:
    mandatory: false
    description: Optional token for git HTTP authentication
  GIT_SSH_KEY:
    mandatory: false
    description: Optional private key for git SSH authentication
  GIT_BRANCH:
    mandatory: true
    description: The branch name of the git repository
  LOG_LEVEL:
    mandatory: true
    description: Log level for CI tasks
workspace:
  type: K8S
  endpoint: cbr-mc-cluster-1
  image: ${input.BUILDER_IMAGE_PATH}
  registry: ""
  path: workdir
  autoCloneForTrigger: false
  limits:
    cpu: 1.0
    memory: 512
  customProperties:
    proxyType: loadBalancer
    namespace: codestream-ci
    persistentVolumeClaim: codestream-ci
stageOrder:
  - Static Analysis
  - Unit Testing
  - Build and Scan
  - Integration Testing
  - Release
  - Deploy
stages:
  Unit Testing:
    taskOrder:
      - Python,Rust
    tasks:
      Rust:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Test Rust with cargo"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - echo "Do something here..."
            - ""
          export: []
          artifacts: []
          process: []
      Python:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Test python with pytest"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - echo "Do something here..."
            - ""
          export: []
          artifacts: []
          process: []
  Integration Testing:
    taskOrder:
      - vSphere CLI
      - Integration Testing
      - Cleanup
    tasks:
      vSphere CLI:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Run vSphere commands"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_GOVC="TRUE"
            - ""
            - codestream-ci govc
            - ""
          export: []
          artifacts: []
          process: []
      Integration Testing:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Run Integration Tests"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - echo "Do something here..."
            - ""
          export: []
          artifacts: []
          process: []
      Cleanup:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Cleanup temporary infra"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - echo "Do something here..."
            - ""
          export: []
          artifacts: []
          process: []
  Deploy:
    taskOrder:
      - Helm,Kubectl
    tasks:
      Kubectl:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Run kubectl commands"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_KUBECTL="TRUE"
            - ""
            - codestream-ci kubectl
            - ""
          export: []
          artifacts: []
          process: []
      Helm:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Deploy Helm chart"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_HELM="TRUE"
            - ""
            - codestream-ci helm
            - ""
          export: []
          artifacts: []
          process: []
  Build and Scan:
    taskOrder:
      - Buildah,Kaniko,Kpack,Packer
      - Syft
      - Grype,Clair,Synk,Trivy
    tasks:
      Kaniko:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Build container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - export CI_REGISTRY=${input.OCI_REGISTRY}
            - export CI_REGISTRY_CACHE=${input.OCI_REGISTRY_CACHE}
            - export CI_REGISTRY_USERNAME=${input.OCI_REGISTRY_USERNAME}
            - export CI_REGISTRY_PASSWORD=${var.github_token_saltlabs}
            - export CI_IMAGE_NAME=${input.IMAGE_NAME}
            - export CI_IMAGE_TAG=${input.IMAGE_TAG}
            - ""
            - codestream-ci kaniko
            - ""
          export: []
          artifacts: []
          process: []
      Kpack:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Build container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - export CI_REGISTRY=${input.OCI_REGISTRY}
            - export CI_REGISTRY_USERNAME=${input.OCI_REGISTRY_USERNAME}
            - export CI_REGISTRY_PASSWORD=${var.github_token_saltlabs}
            - export CI_IMAGE_NAME=${input.IMAGE_NAME}
            - export CI_IMAGE_TAG=${input.IMAGE_TAG}
            - ""
            - export DISABLE_KPACK="TRUE"
            - ""
            - codestream-ci help
            - ""
          export: []
          artifacts: []
          process: []
      Syft:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Generate SBOM"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_SYFT="TRUE"
            - ""
            - codestream-ci syft
            - ""
          export: []
          artifacts: []
          process: []
      Clair:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Scan container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_CLAIR="TRUE"
            - ""
            - codestream-ci clair
            - ""
          export: []
          artifacts: []
          process: []
      Synk:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Scan container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_SYNK="TRUE"
            - ""
            - codestream-ci synk
            - ""
          export: []
          artifacts: []
          process: []
      Buildah:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Build container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - export CI_REGISTRY=${input.OCI_REGISTRY}
            - export CI_REGISTRY_USERNAME=${input.OCI_REGISTRY_USERNAME}
            - export CI_REGISTRY_PASSWORD=${var.github_token_saltlabs}
            - export CI_IMAGE_NAME=${input.IMAGE_NAME}
            - export CI_IMAGE_TAG=${input.IMAGE_TAG}
            - ""
            - export DISABLE_BUILDAH="TRUE"
            - ""
            - codestream-ci buildah
            - ""
          export: []
          artifacts: []
          process: []
      Trivy:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Scan container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_TRIVY="TRUE"
            - ""
            - codestream-ci trivy
            - ""
          export: []
          artifacts: []
          process: []
      Grype:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Scan container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - codestream-ci grype
            - ""
          export: []
          artifacts: []
          process: []
      Packer:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Build VM image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_PACKER="TRUE"
            - ""
            - codestream-ci packer
            - ""
          export: []
          artifacts: []
          process: []
  Static Analysis:
    taskOrder:
      - Source
      - Ruby,C,Secrets,Dockerfile,Infra Code,Kubernetes,Licenses,Shell,HCL
    tasks:
      HCL:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Lint Terraform Code with tflint"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_TFLINT="TRUE"
            - export DISABLE_TFSEC="TRUE"
            - ""
            - codestream-ci tflint
            - ""
            - codestream-ci tfsec
            - ""
          export: []
          artifacts: []
          process: []
      Dockerfile:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Dockerfile linter"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_HADOLINT="TRUE"
            - ""
            - codestream-ci hadolint
            - ""
          export: []
          artifacts: []
          process: []
      Shell:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Lint shell code"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_SHELLCHECK="TRUE"
            - ""
            - codestream-ci shellcheck
            - ""
          export: []
          artifacts: []
          process: []
      C:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Find flaws in C/C++ code"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - codestream-ci flawfinder
            - ""
          export: []
          artifacts: []
          process: []
      Secrets:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Find secrets left in code"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_SECRETSCANNER="TRUE"
            - ""
            - codestream-ci secretscanner
            - ""
            - codestream-ci gitleaks
            - ""
          export: []
          artifacts: []
          process: []
      Licenses:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Search for Licenses"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_LICENSE_FINDER="TRUE"
            - ""
            - codestream-ci license_finder
            - ""
          export: []
          artifacts: []
          process: []
      Ruby:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Find flaws in Ruby code"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - codestream-ci brakeman
            - ""
          export: []
          artifacts: []
          process: []
      Infra Code:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Keep your Infrastructure Code Secure"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_KICS="TRUE"
            - ""
            - codestream-ci kics
            - ""
          export: []
          artifacts: []
          process: []
      Source:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Clone source code"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_REPO="${input.GIT_REPO}"
            - export CI_GIT_BRANCH="${input.GIT_BRANCH}"
            - export CI_GIT_SRC="${input.GIT_SRC}"
            - ""
            - codestream-ci git_clone
            - ""
          export: []
          artifacts: []
          process: []
      Kubernetes:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Lint your Kubernetes manifests"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_KUBE_LINTER="TRUE"
            - export DISABLE_KUBESEC="TRUE"
            - ""
            - codestream-ci kube-linter
            - ""
            - codestream-ci kubesec
            - ""
          export: []
          artifacts: []
          process: []
  Release:
    taskOrder:
      - Skopeo
      - Cosign
    tasks:
      Skopeo:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Tag container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_SKOPEO="TRUE"
            - ""
            - codestream-ci skopeo
            - ""
          export: []
          artifacts: []
          process: []
      Cosign:
        type: CI
        input:
          steps:
            - "#-------------------------#"
            - "# Sign container image"
            - "#-------------------------#"
            - ""
            - export CI_LOG_LEVEL="${input.LOG_LEVEL}"
            - export CI_GIT_SRC=${input.GIT_SRC}
            - ""
            - export DISABLE_COSIGN="TRUE"
            - ""
            - codestream-ci cosign
            - ""
            - ""
          export: []
          artifacts: []
          process: []
