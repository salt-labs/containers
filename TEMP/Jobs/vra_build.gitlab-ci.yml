---
##################################################
# Name: vra_build
# Description: Builds a host in vRA and has Tower apply the selected template.
# Notes:
#   * A CI variable TOWER_TEMPLATE is required to be set with a value that
#     represents the template in Tower that should be applied to the host.
#
#   * A CI variable GITLAB_VRA_TOKEN is required to be set with a token that
#     has permissions to access the vRA API.
##################################################

.vra-build:
  image:
    name: artefacts.saltlabs.cloud/docker/vra-rest-utility:latest
  script:
    - mkdir output
    - |
      [[ "${TOWER_TEMPLATE:-EMPTY}" == "EMPTY" ]] && (echo "TOWER_TEMPLATE must be set" >&2; exit 1)
      # kics-scan ignore-line
      [[ "${GITLAB_VRA_TOKEN:-EMPTY}" == "EMPTY" ]] && (echo "GITLAB_VRA_TOKEN must be set" >&2; exit 1)
    - |-
      INPUTJSON=$(cat << JSON
      {
        "blueprint_ansible_template": "${TOWER_TEMPLATE}",
        "deployment_name": "${CI_PROJECT_NAME}_${CI_PIPELINE_ID}",
        "GIT_BRANCH_NAME": "${CI_COMMIT_BRANCH}",
        "GIT_REPO_NAME": "${CI_PROJECT_NAME}",
        "GIT_EVENT_OWNER_NAME": "$(echo ${CI_COMMIT_AUTHOR} | awk '{print $1}')",
        "GIT_EVENT_TIMESTAMP": "${CI_COMMIT_TIMESTAMP}",
        "GIT_COMMIT_ID": "${CI_COMMIT_SHA}",
        "GIT_SERVER_URL": "${CI_PIPELINE_URL}"
      }
      JSON
      )
    - vraRESTUtil -t ${GITLAB_VRA_TOKEN} pipeline -ex -pi f2afa3ea-a403-4193-b5d1-fc2f9278d127 -i $(echo ${INPUTJSON} | jq -rc ".") > output/deployment.json
    - ID=$(jq -rc ".executionId" output/deployment.json)
    - getExecutionStatus ${GITLAB_VRA_TOKEN} $ID
  artifacts:
    expire_in: 1 hour
    paths:
      - "output"
