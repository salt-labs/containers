##################################################
# Kubie
##################################################

shell: bash

configs:
  include:
    # Kubernetes
    - ~/.kube/config
    - ~/.kube/*.yml
    - ~/.kube/*.yaml
    - ~/.kube/configs/*.yml
    - ~/.kube/configs/*.yaml

    # Kubie
    - ~/.kube/kubie/*.yml
    - ~/.kube/kubie/*.yaml

    # Tanzu Kubernetes Grid
    - ~/.kube-tkg/config
    - ~/.kube-tkg/*.yml
    - ~/.kube-tkg/*.yaml

    # Pinniped
    - ~/.pinniped/*.yml
    - ~/.pinniped/*.yaml

  exclude:
    # Kubie config
    - ~/.kube/kubie.yaml

prompt:
  # Disable kubie's custom prompt inside of a kubie shell. This is useful
  # when you already have a prompt displaying kubernetes information.
  # One example is if you use Starship.
  # Default: false
  disable: true

  # When using recursive contexts, show depth when larger than 1.
  # Default: true
  show_depth: true

  # When using zsh, show context and namespace on the right-hand side using RPS1.
  # Default: false
  zsh_use_rps1: false

  # When using fish, show context and namespace on the right-hand side.
  # Default: false
  fish_use_rprompt: false

  # When using xonsh, show context and namespace on the right-hand side.
  # Default: false
  xonsh_use_right_prompt: false

behavior:
  # Make sure the namespace exists with `kubectl get namespaces` when switching
  # namespaces. If you do not have the right to list namespaces, disable this.
  # Default: true
  validate_namespaces: true

  # Enable or disable the printing of the 'CONTEXT => ...' headers when running
  # `kubie exec`.
  # Valid values:
  #   auto:   Prints context headers only if stdout is a TTY. Piping/redirecting
  #           kubie output will auto-disable context headers.
  #   always: Always prints context headers, even if stdout is not a TTY.
  #   never:  Never prints context headers.
  # Default: auto
  print_context_in_exec: auto

hooks:
  # A command hook to run when a CTX is started.
  # This example re-labels your terminal window
  # Default: none
  start_ctx: >
    echo -en "\033]1; `kubie info ctx`|`kubie info ns` \007"

  # A command hook to run when a CTX is stopped
  # This example sets the terminal back to the shell name
  # Default: none
  stop_ctx: >
    echo -en "\033]1; $SHELL \007"
