---
name: Containers

on:
  push:
    branches:
      - trunk

  pull_request:
    branches:
      - "trunk"
    paths:
      - .github/workflows/devenv.yaml
      - devenv.nix
      - devenv.nix
      - devenv.lock
      - devenv/**

permissions:
  contents: write
  packages: write
  pull-requests: write
  statuses: read

env:
  NIXPKGS_ALLOW_UNFREE: 1

  REGISTRY: ghcr.io
  PROJECT: ${{ github.repository }}

  BRANCH_NAME_CURRENT: ${{ github.head_ref || github.ref_name }}
  BRANCH_NAME_DEFAULT: ${{ github.event.repository.default_branch }}

  REGISTRY_AUTH_FILE: ./auth.json

defaults:
  run:
    shell: bash

jobs:
  ##################################################
  # Matrix
  ##################################################

  matrix:
    name: Matrix

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30
    continue-on-error: false

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v4

      - id: generate_matrix
        name: Generating a matrix of container names
        run: |
          echo "Generating matrix of container names..."
          # yamllint disable-line rule:line-length
          CONTAINER_NAMES=$(find devenv/containers -mindepth 1 -maxdepth 1 -type d ! -name "_template" ! -name "_disabled*" -printf "%f\n" | jq -R -s -c 'split("\n")[:-1]')
          echo "${CONTAINER_NAMES}" | jq .
          echo "CONTAINER_MATRIX=${CONTAINER_NAMES}" >> "$GITHUB_OUTPUT"

    outputs:
      container_matrix: ${{ steps.generate_matrix.outputs.CONTAINER_MATRIX }}

  ##################################################
  # Build
  ##################################################

  test:
    name: Build Container ${{ matrix.container }}

    runs-on: ${{ matrix.os }}

    needs:
      - matrix

    timeout-minutes: 30
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        container: ${{ fromJson(needs.matrix.outputs.container_matrix) }}

    steps:
      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false
          submodules: recursive

      - id: install_nix
        name: "Install Nix ❄️"
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - id: cachix
        name: "Enable Cachix ❄️"
        uses: cachix/cachix-action@v14
        with:
          name: ${{ secrets.CACHIX_CACHE_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          useDaemon: true
          skipPush: false

      - id: install_devenv
        name: Install devenv
        run: |
          nix profile install tarball+https://install.devenv.sh/latest

      - id: calver
        name: Set Calver Version
        run: |
          if [[ "${BRANCH_NAME_CURRENT}" == "${BRANCH_NAME_DEFAULT}" ]];
          then
            echo "Set CalVer for default branch"
            echo "package_version=$(date '+%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          else
            echo "Set CalVer for non-default branch"
            echo "package_version=$(date '+%Y.%m.%d')-$(date -d "1970-01-01 UTC $(date +%T)" +%s)" >> "$GITHUB_OUTPUT"
          fi

      - id: build_container
        name: "Build container image ${{ matrix.container }}:${{ steps.calver.outputs.package_version }}"
        run: >
          devenv container build ${{ matrix.container }}
          --registry docker://${{ env.REGISTRY }}/${{ env.PROJECT }}/
          --copy-args="--dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}"
