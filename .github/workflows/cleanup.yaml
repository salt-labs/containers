---
name: Cleanup

on:
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read
  packages: write

jobs:
  matrix:
    name: Matrix

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30
    continue-on-error: false

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v3

      - id: generate_matrix
        name: Generating a matrix of container names
        run: |
          echo "Generating matrix of container names..."
          CONTAINER_NAMES=$(find oci -mindepth 1 -type d ! -name "_template" ! -name "_disabled*" -printf "%f\n" | jq -R -s -c 'split("\n")[:-1]')
          echo "${CONTAINER_NAMES}" | jq .
          echo "CONTAINER_MATRIX=${CONTAINER_NAMES}" >> "$GITHUB_OUTPUT"

    outputs:
      container_matrix: ${{ steps.generate_matrix.outputs.CONTAINER_MATRIX }}

  cleanup:
    name: Cleanup Packages

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30
    continue-on-error: false

    needs: matrix

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: cleanup_packages
        name: Cleanup packages
        uses: smartsquaregmbh/delete-old-packages@v0.6.0
        with:
          owner: salt-labs
          repo: devsecops
          keep: 0
          dry-run: false
          type: container
          token: ${{ secrets.GITHUB_TOKEN }}
          names: ${{ fromJson(needs.matrix.outputs.container_matrix) }}

      - id: cleanup_packages_org
        name: Cleanup packages
        uses: smartsquaregmbh/delete-old-packages@v0.6.0
        with:
          organization: salt-labs
          keep: 0
          dry-run: false
          type: container
          token: ${{ secrets.GITHUB_TOKEN }}
          names: |
            kaniko-cache
            action-ship-it
            cloud-city
